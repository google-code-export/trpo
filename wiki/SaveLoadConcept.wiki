#summary Описывает формат и стиль сохраняемых данных в программе.
#labels Phase-Design

= Введение =

Данный документ описывает то, в каком формате будет сохраняться файл и как он будет загружаться.


= Основные методы описания =

Строковые значения будут записываться в прямом виде, с заменой следующих сущностей (экранирование, на данный момент осуществляется самим Qt и заменяются только ",&,<):

|| " ||	 &quot; ||
|| ' ||	 &apos; ||
|| & ||	 &amp;  ||
|| < ||	 &lt;   ||
|| > ||	 &gt;   ||
|| \n || &#10; ||


Целочисленные значения и символы, а также значения с плавающей точкой отображаются в строку и записываются без изменений.

Указатели отображаются как числа в шестнадцатеричном виде.

Точка (QPointF) отображается, как строка   вида "<X координата>;<Y координата>"

Прямоугольник (QRectF) отображается, как строка вида "<X координата>;<Y координата>;<Длина>;<Высота>", где внутренние параметры - прямое отображение числа с плавающей точкой в строку.

Прямоугольник (QRect) отображается, как строка вида "<X координата>;<Y координата>;<Длина>;<Высота>", где внутренние параметры - прямое отображение целого числа в строку.

= Описание блока =

Описание блока состоит из следующего тега со следующими аттрибутами:

|| <block this="указатель на себя" real_string="реальный текст блока" viewed_string="отображаемый текст блока" string_pos="прямоугольник, в который вписывается текст" number_pos="позиция номера текста" rect="прямоугольник, который описывает границы блока" id="Идентификатор блока" childid="ID дочерней диаграммы"></block> ||

Внутри блока имеются следующие сущности
||  <ptr value="указатель на прикрепленный сегмент стрелки"></ptr>  ||

NULL указывает, что никакой сегмент не прикреплен. Также они записаны строго в порядке следования сторон и в порядке увеличения номера ссылки.

= Описание надписи аннотации =

Описание надписи аннотации состоит из следующего тега со следующими атрибутами:

|| <annotation_label string="текст надписи аннотации" rect="прямоугольник, описывающий границу надписи"></annotation_label> ||

= Описание линии аннотации =

Описание линии аннотации может производиться в следующих видах.
Если линия прикреплена к сегменту стрелки, то объявление выглядит как

|| <annotation_line this="указатель на себя" binded="true" binded_ptr="указатель на точку, к которой прикреплена линия" free="координаты второй точки"></annotation_line> ||

Иначе:

|| <annotation_line this="указатель на себя" binded="false" coords="координаты первой точки" free="координаты второй точки"></annotation_line> ||

= Описание сегмента стрелки =

Описание сегмента производится в следующем формате:

|| <segment  this="указатель на себя" in="указатель на точку, описывающую вход" out="указатель на точку, описывающую выход"></segment> ||

= Описание точки стрелки =

Описание точки стрелки производится в следующем формате

|| <point this="указатель на себя" x="координата по оси х" y="координата по оси y" block="идентификатор блока к которому прикреплена"></point> ||

Внутри описания точки содержаться следующие определения

|| <in ptr="указатель на входной сегмент"></in> ||
|| <out ptr="указатель на выходной сегмент"></out> ||
|| <line ptr="указатель на линию аннотации"></line> ||

= Описание диаграммы =

Содержит все предыдущие определения, однако сама определяется как:

|| <diagram  id="Индентификатор диаграммы" location="номер родительской диаграммы;номер блока"></diagram> ||

= Набор диаграмм =
 
Описывается как:

|| <set maxid="число диаграмм"></set> ||

= Сохранение =

Не представляет проблем - данная архитектура представима в виде дерева в итоге мы можем последовательно пройтись по архитектуре и сохранить всё в вершины.

= Загрузка  =

Используется следующая структура:

  #. Указатель на текущий набор диаграмм.
  #. Указатель на текущую диаграмму
  #. Указатель на текущий блок
  #. Указатель на текущую точку сегмента
  #. Указатель на текщую  сцену
  #. Хеш  указатель -> блок
  #. Хеш  указатель -> линия аннотации
  #. Хеш  указатель -> сегмент
  #. Хеш  указатель -> точка

На данном этапе разработки работа алгоритма строится следующим образом:

  #. Сначала заполняется максимальное число диаграмм
  #. Затем для каждой диаграммы устанавливается ID и она устанавливается в поле.
  #. В эту диаграмму добавляются все объекты и заполняются хеши их отображения (поля 5-8 структуры). Их поля-указатели устанавливаются в неправильные значения указателей (т.е. то, что было в файле)
  #. По всем объектам диаграммы производится цикл исправления указателей (поля 5-8 структуры)
  #. Объекты диаграммы добавляются в сцену
  #. Обновляется сцена